{"ast":null,"code":"import { uploadAPI } from './api';\nexport const validateFile = file => {\n  const maxSize = 50 * 1024 * 1024; // 50MB\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n  if (!allowedTypes.includes(file.type)) {\n    return {\n      isValid: false,\n      error: 'Only PNG and JPEG files are allowed'\n    };\n  }\n  if (file.size > maxSize) {\n    return {\n      isValid: false,\n      error: 'File size must be less than 50MB'\n    };\n  }\n  return {\n    isValid: true\n  };\n};\nexport const uploadAsset = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('name', file.name);\n  try {\n    const response = await uploadAPI.uploadAsset(formData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Upload failed');\n  }\n};\nexport const getAssetsList = async (filters = {}) => {\n  try {\n    const response = await uploadAPI.getAssets(filters);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch assets');\n  }\n};","map":{"version":3,"names":["uploadAPI","validateFile","file","maxSize","allowedTypes","includes","type","isValid","error","size","uploadAsset","formData","FormData","append","name","response","data","_error$response","_error$response$data","Error","message","getAssetsList","filters","getAssets"],"sources":["C:/New folder/New folder/project/src/services/upload.js"],"sourcesContent":["import { uploadAPI } from './api';\r\n\r\nexport const validateFile = (file) => {\r\n  const maxSize = 50 * 1024 * 1024; // 50MB\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\r\n\r\n  if (!allowedTypes.includes(file.type)) {\r\n    return {\r\n      isValid: false,\r\n      error: 'Only PNG and JPEG files are allowed'\r\n    };\r\n  }\r\n\r\n  if (file.size > maxSize) {\r\n    return {\r\n      isValid: false,\r\n      error: 'File size must be less than 50MB'\r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\nexport const uploadAsset = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('name', file.name);\r\n\r\n  try {\r\n    const response = await uploadAPI.uploadAsset(formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Upload failed');\r\n  }\r\n};\r\n\r\nexport const getAssetsList = async (filters = {}) => {\r\n  try {\r\n    const response = await uploadAPI.getAssets(filters);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch assets');\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,MAAMC,OAAO,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;EAClC,MAAMC,YAAY,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC;EAE7D,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACH,IAAI,CAACI,IAAI,CAAC,EAAE;IACrC,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH;EAEA,IAAIN,IAAI,CAACO,IAAI,GAAGN,OAAO,EAAE;IACvB,OAAO;MACLI,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH;EAEA,OAAO;IAAED,OAAO,EAAE;EAAK,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOR,IAAI,IAAK;EACzC,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;EAC7BS,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAACY,IAAI,CAAC;EAElC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,SAAS,CAACU,WAAW,CAACC,QAAQ,CAAC;IACtD,OAAOI,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAS,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAT,KAAK,CAACO,QAAQ,cAAAE,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,eAAe,CAAC;EACnE;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACnD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMf,SAAS,CAACuB,SAAS,CAACD,OAAO,CAAC;IACnD,OAAOP,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,MAAM,IAAIW,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}