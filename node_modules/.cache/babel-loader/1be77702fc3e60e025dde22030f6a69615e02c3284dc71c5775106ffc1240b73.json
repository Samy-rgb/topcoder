{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\New folder\\\\project\\\\src\\\\components\\\\upload\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, X } from 'lucide-react';\nimport { toast } from 'react-toastify';\nimport { uploadAsset, validateFile } from '../../services/upload';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadSuccess\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const onDrop = useCallback(async (acceptedFiles, rejectedFiles) => {\n    rejectedFiles.forEach(file => {\n      toast.error(`File ${file.file.name} was rejected: ${file.errors[0].message}`);\n    });\n    setUploading(true);\n    for (const file of acceptedFiles) {\n      try {\n        const validation = validateFile(file);\n        if (!validation.isValid) {\n          toast.error(`${file.name}: ${validation.error}`);\n          continue;\n        }\n        const response = await uploadAsset(file);\n        setUploadedFiles(prev => [...prev, {\n          id: response.id,\n          name: file.name,\n          size: file.size,\n          url: response.url,\n          thumbnail: response.thumbnail\n        }]);\n        toast.success(`${file.name} uploaded successfully`);\n        onUploadSuccess && onUploadSuccess(response);\n      } catch (error) {\n        toast.error(`Failed to upload ${file.name}: ${error.message}`);\n      }\n    }\n    setUploading(false);\n  }, [onUploadSuccess]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/jpeg': ['.jpg', '.jpeg'],\n      'image/png': ['.png']\n    },\n    maxFiles: 10,\n    maxSize: 50 * 1024 * 1024,\n    multiple: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''} ${uploading ? 'uploading' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone-content\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drop the files here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop high-resolution assets here, or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-hint\",\n            children: \"Supports: PNG, JPEG \\u2022 Max size: 50MB \\u2022 Max files: 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Uploading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"F8HMLx6vdJwHGpvLAfAEQm/Xmro=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","Upload","X","toast","uploadAsset","validateFile","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","onUploadSuccess","_s","uploading","setUploading","uploadedFiles","setUploadedFiles","onDrop","acceptedFiles","rejectedFiles","forEach","file","error","name","errors","message","validation","isValid","response","prev","id","size","url","thumbnail","success","getRootProps","getInputProps","isDragActive","accept","maxFiles","maxSize","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder/New folder/project/src/components/upload/FileUpload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Upload, X } from 'lucide-react';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadAsset, validateFile } from '../../services/upload';\r\n\r\nconst FileUpload = ({ onUploadSuccess }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles, rejectedFiles) => {\r\n    rejectedFiles.forEach(file => {\r\n      toast.error(`File ${file.file.name} was rejected: ${file.errors[0].message}`);\r\n    });\r\n\r\n    setUploading(true);\r\n    for (const file of acceptedFiles) {\r\n      try {\r\n        const validation = validateFile(file);\r\n        if (!validation.isValid) {\r\n          toast.error(`${file.name}: ${validation.error}`);\r\n          continue;\r\n        }\r\n        const response = await uploadAsset(file);\r\n        setUploadedFiles(prev => [...prev, {\r\n          id: response.id,\r\n          name: file.name,\r\n          size: file.size,\r\n          url: response.url,\r\n          thumbnail: response.thumbnail\r\n        }]);\r\n        toast.success(`${file.name} uploaded successfully`);\r\n        onUploadSuccess && onUploadSuccess(response);\r\n      } catch (error) {\r\n        toast.error(`Failed to upload ${file.name}: ${error.message}`);\r\n      }\r\n    }\r\n    setUploading(false);\r\n  }, [onUploadSuccess]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: { 'image/jpeg': ['.jpg', '.jpeg'], 'image/png': ['.png'] },\r\n    maxFiles: 10,\r\n    maxSize: 50 * 1024 * 1024,\r\n    multiple: true\r\n  });\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''} ${uploading ? 'uploading' : ''}`}>\r\n        <input {...getInputProps()} />\r\n        <div className=\"dropzone-content\">\r\n          <Upload size={48} />\r\n          {isDragActive ? (\r\n            <p>Drop the files here...</p>\r\n          ) : (\r\n            <>\r\n              <p>Drag & drop high-resolution assets here, or click to select</p>\r\n              <p className=\"dropzone-hint\">Supports: PNG, JPEG • Max size: 50MB • Max files: 10</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {uploading && (\r\n        <div className=\"upload-progress\">\r\n          <div className=\"spinner\"></div>\r\n          <span>Uploading files...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}