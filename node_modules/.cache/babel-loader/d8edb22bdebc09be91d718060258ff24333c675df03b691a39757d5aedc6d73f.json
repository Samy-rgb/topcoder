{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport const uploadAPI = {\n  uploadAsset: formData => api.post('/assets/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getAssets: params => api.get('/assets', {\n    params\n  }),\n  getAssetById: id => api.get(`/assets/${id}`),\n  deleteAsset: id => api.delete(`/assets/${id}`)\n};\nexport const generationAPI = {\n  getAIProviders: () => api.get('/generation/providers'),\n  getPlatforms: () => api.get('/platforms'),\n  getFormats: platformId => api.get(`/platforms/${platformId}/formats`),\n  generateAssets: payload => api.post('/generation/generate', payload),\n  getGenerationJob: jobId => api.get(`/generation/jobs/${jobId}`),\n  saveAssetMetadata: (assetId, metadata) => api.put(`/assets/${assetId}/metadata`, metadata)\n};\nexport const downloadAPI = {\n  downloadAsset: (assetId, formatId) => api.get(`/assets/${assetId}/download/${formatId}`, {\n    responseType: 'blob'\n  }),\n  downloadBulk: assetIds => api.post('/assets/download/bulk', {\n    assetIds\n  }, {\n    responseType: 'blob'\n  }),\n  getDownloadHistory: () => api.get('/downloads/history')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","logout","getCurrentUser","get","uploadAPI","uploadAsset","formData","getAssets","params","getAssetById","id","deleteAsset","delete","generationAPI","getAIProviders","getPlatforms","getFormats","platformId","generateAssets","payload","getGenerationJob","jobId","saveAssetMetadata","assetId","metadata","put","downloadAPI","downloadAsset","formatId","responseType","downloadBulk","assetIds","getDownloadHistory"],"sources":["C:/New folder/New folder/project/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  logout: () => api.post('/auth/logout'),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\nexport const uploadAPI = {\r\n  uploadAsset: (formData) => api.post('/assets/upload', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  getAssets: (params) => api.get('/assets', { params }),\r\n  getAssetById: (id) => api.get(`/assets/${id}`),\r\n  deleteAsset: (id) => api.delete(`/assets/${id}`),\r\n};\r\n\r\nexport const generationAPI = {\r\n  getAIProviders: () => api.get('/generation/providers'),\r\n  getPlatforms: () => api.get('/platforms'),\r\n  getFormats: (platformId) => api.get(`/platforms/${platformId}/formats`),\r\n  generateAssets: (payload) => api.post('/generation/generate', payload),\r\n  getGenerationJob: (jobId) => api.get(`/generation/jobs/${jobId}`),\r\n  saveAssetMetadata: (assetId, metadata) => api.put(`/assets/${assetId}/metadata`, metadata),\r\n};\r\n\r\nexport const downloadAPI = {\r\n  downloadAsset: (assetId, formatId) => api.get(`/assets/${assetId}/download/${formatId}`, {\r\n    responseType: 'blob'\r\n  }),\r\n  downloadBulk: (assetIds) => api.post('/assets/download/bulk', { assetIds }, {\r\n    responseType: 'blob'\r\n  }),\r\n  getDownloadHistory: () => api.get('/downloads/history'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}